from aiogram import Router, F
from aiogram.types import Message

from keyboards import start_menu_keyboard, account_menu, topping_up_menu, buy_menu
from utils import get_products

products = [
    {"id": 1, "name": "Vbucks", "key": "1111-1111-1111", "price": 500},
    {"id": 2, "name": "Terraria", "key": "2222-2222-2222", "price": 300},
    {"id": 3, "name": "RDR", "key": "3333-3333-3333", "price": 200},
]

account = {"balance": 0}

router = Router()

@router.message(F.text.in_(["–ù–∞–∑–∞–¥ ‚¨Ö", "/start"]))
async def start(message: Message):
    answer_text = f"–ü—Ä–∏–≤–µ—Ç {message.from_user.first_name}.\n" \
            "–¢—ã –ø–æ–ø–∞–ª –≤ –º–∞–≥–∞–∑–∏–Ω –∫–ª—é—á–µ–π <b>KeysStore</b> üîë"
    await message.answer(text=answer_text, reply_markup=start_menu_keyboard())


@router.message(F.text == "–°–ø–∏—Å–æ–∫ –∫–ª—é—á–µ–π üìñ")
async def values_list(message: Message):
    answer_text = get_products(products)

    await message.answer(text=answer_text, reply_markup=start_menu_keyboard())


@router.message(F.text == "–ê–∫–∫–∞—É–Ω—Ç üë§")
async def account_hanler(message: Message):
    answer_text = f"–ò–º—è –∞–∫–∫–∞—É–Ω—Ç–∞: {message.from_user.first_name}\n" \
                  f"–ë–∞–ª–∞–Ω—Å –∞–∫–∫–∞—É–Ω—Ç–∞: {account.get("balance")}—Ä—É–±." \
                  
    await message.answer(text=answer_text, reply_markup=account_menu())


@router.message(F.text == "–ö—É–ø–∏—Ç—å üîë")
async def product_selection(message: Message):
    answer_text = f"–í–∞—à –±–∞–ª–∞–Ω—Å: {account.get("balance")}\n\n" + get_products(products)
    await message.answer(answer_text)
    await message.answer(text="–í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—ã–π –ø—Ä–æ–¥—É–∫—Ç", reply_markup=buy_menu())


@router.message(F.text.in_([product.get("name") for product in products]))
async def buy_key_handler(message: Message):
    answer_text = f"–ü—Ä–∏–≤–µ—Ç {message.from_user.first_name}.\n" \
                   "–¢—ã –ø–æ–ø–∞–ª –≤ –º–∞–≥–∞–∑–∏–Ω –∫–ª—é—á–µ–π <b>KeysStore</b> üîë"
    data = message.text
    price = 0
    for product in products:
        if product.get("name") == data:
            price = product.get("price")
            break
    
    if not price:
        await message.answer(text="–¢–∞–∫–æ–π –ø–æ–∑–∏—Ü–∏–∏ –Ω–µ—Ç!")
        return
    
    balance = account.get("balance")

    if balance < price:
        await message.answer(text="–£ –≤–∞—Å –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç –¥–µ–Ω–µ–≥!", reply_markup=buy_menu())
        await message.answer(text=answer_text, reply_markup=start_menu_keyboard())
        return
    
    balance -= price
    account.update({"balance": balance})
    await message.answer(f"–ü–æ–∫—É–ø–∫–∞ –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–∞!\n–í–∞—à –∫–ª—é—á: {product.get("key")}")
    await message.answer(text=answer_text, reply_markup=start_menu_keyboard())


@router.message(F.text == "–ü–æ–ø–æ–ª–Ω–µ–Ω–∏–µ üí∏")
async def topping_up_balance_start(message: Message):
    await message.answer("–í—ã–±–∏—Ä–µ—Ç–∏ –Ω—É–∂–Ω—É—é —Å—É–º–º—É", reply_markup=topping_up_menu())


@router.message(F.text.in_(["300", "500", "700"]))
async def topping_up_balance_finish(message: Message):
    balance = account.get("balance")
    data = message.text
    answer_text = f"–ò–º—è –∞–∫–∫–∞—É–Ω—Ç–∞: {message.from_user.first_name}\n"
                               
    if data.isdigit():
        balance += int(data)
        account.update({"balance": balance})
        await message.answer("–ü–æ–ø–æ–ª–Ω–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!")
        answer_text += f"–ë–∞–ª–∞–Ω—Å –∞–∫–∫–∞—É–Ω—Ç–∞: {balance}—Ä—É–±."
        await message.answer(answer_text, reply_markup=account_menu())
        return

    answer_text += f"–ë–∞–ª–∞–Ω—Å –∞–∫–∫–∞—É–Ω—Ç–∞: {balance}—Ä—É–±."
    await message.answer("–ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É –ø–æ–∑–∂–µ!", reply_markup=account_menu())
    await message.answer(answer_text, reply_markup=account_menu())